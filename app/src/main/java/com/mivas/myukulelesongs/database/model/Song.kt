package com.mivas.myukulelesongs.database.model

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import com.mivas.myukulelesongs.drive.model.DriveSong
import com.mivas.myukulelesongs.util.UniqueIdGenerator

/**
 * Db entity of a song.
 *
 * @param id The id of the song auto generated by Room db
 * @param title The title of the song. Should be a simple string
 * @param author The author of the song. Should be a simple string
 * @param type The type of the song. Can be 0 - strumming, 1 - picking, 2 - strumming & picking
 * @param strummingPatterns The strumming patterns of the song. A string that can have multiple lines
 * @param pickingPatterns The picking patterns of the song. A string that can have multiple lines
 * @param originalKey The original key of the song. Should be a simple string
 * @param tab The text of the song. Usually a huge string that can have multiple lines
 * @param version The version of the song. This is usually incremented when a song is updated
 * @param uploaded Flag indicating if a song was uploaded to Drive or not
 * @param deleted Flag indicating if a song was marked as deleted or not
 * @param uniqueId Unique id of the song. This a 16 character string generated at song creation
 */
@Entity(tableName = "songs")
data class Song(@PrimaryKey(autoGenerate = true) var id: Long?,
                @ColumnInfo(name = "title") var title: String,
                @ColumnInfo(name = "author") var author: String,
                @ColumnInfo(name = "type") var type: Int,
                @ColumnInfo(name = "strumming_patterns") var strummingPatterns: String,
                @ColumnInfo(name = "picking_patterns") var pickingPatterns: String,
                @ColumnInfo(name = "original_key") var originalKey: String,
                @ColumnInfo(name = "tab") var tab: String,
                @ColumnInfo(name = "version") var version: Long,
                @ColumnInfo(name = "uploaded") var uploaded: Boolean,
                @ColumnInfo(name = "deleted") var deleted: Boolean,
                @ColumnInfo(name = "unique_id") var uniqueId: String) {
    constructor() : this(null, "", "", 0, "", "", "", "", 0, false, false, UniqueIdGenerator.generate())
    constructor(title: String = "", author: String = "", type: Int = 0, strummingPatterns: String = "", pickingPatterns: String = "", originalKey: String = "", tab: String = "", version: Long = 0, uploaded: Boolean = false, deleted: Boolean = false, uniqueId: String = UniqueIdGenerator.generate()) : this(null, title, author, type, strummingPatterns, pickingPatterns, originalKey, tab, version, false, false, uniqueId)

    /**
     * Converts the [Song] to a [DriveSong].
     */
    fun toDriveSong() = DriveSong(title, author, type, strummingPatterns, pickingPatterns, originalKey, tab, version, uniqueId)
}